//===== rAthena Script =======================================
//= Euphy's Quest Shop
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.6c
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= A dynamic quest shop based on Lunar's, with easier config.
//= Includes support for multiple shops & cashpoints.
//= Item Preview script by ToastOfDoom.
//===== Additional Comments: =================================
//= 1.0 Initial script.
//= 1.2 Added category support.
//= 1.3 More options and fixes.
//= 1.4 Added debug settings.
//= 1.5 Replaced categories with shop IDs.
//= 1.6 Added support for purchasing stackables.
//= 1.6a Added support for previewing costumes and robes.
//= 1.6b Added 'disable_items' command.
//= 1.6c Replaced function 'A_An' with "F_InsertArticle".
//= Added Beret / * Updated Item Requirements 
//============================================================

// Shop NPCs -- supplying no argument displays entire menu.
//	callfunc "pshop"{,<shop ID>{,<shop ID>{,...}}};
//============================================================
jupe_ele,34,48,6	script	Hat Maker#1	436,{ callfunc "pshop"; }


// Script Core
//============================================================
-	script	1quest_cshop	-1,{ 
function Add; function Chk; function Slot;
OnInit:
	freeloop(1);

// -----------------------------------------------------------
//  Basic shop settings.
// -----------------------------------------------------------

	set .Announce,1;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,1;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .ShowID,1;  	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,0;	// Show Zeny cost, if any? (1: yes / 0: no)
	set .MaxStack,100;	// Max number of quest items purchased at one time.

// -----------------------------------------------------------
//  Points variable -- optional quest requirement.
//	setarray .Points$[0],"<variable name>","<display name>";
// -----------------------------------------------------------

	setarray .Points$[0],"#CASHPOINTS","Cash Points";

// -----------------------------------------------------------
//  Shop IDs -- to add shops, copy dummy data at bottom of file.
//	setarray .Shops$[1],"<Shop 1>","<Shop 2>"{,...};
// -----------------------------------------------------------

	setarray .Shops$[1],"A-C","D-F","G-I","J-Z";

// -----------------------------------------------------------
//  Quest items -- do NOT use a reward item more than once!
//	Add(<shop ID>,<reward ID>,<reward amount>,
//	    <Zeny cost>,<point cost>,
//	    <required item ID>,<required item amount>{,...});
// -----------------------------------------------------------

	Add(1,5086,1,50000,0,5024,1,539,30,660,3,7711,20);
	//Add(1,5137,1,50000,0,5141,5,7047,200,1047,10,7711,20); // Alice Doll*
	Add(1,5074,1,50000,0,2286,1,2254,1,7711,20);
	Add(1,5153,1,50000,0,10011,1,7711,20);
	Add(1,2284,1,50000,0,923,20,7711,20);
	Add(1,5174,1,50000,0,991,7,992,7,993,7,994,7,945,300,975,1,733,5,1059,50,7711,20); // Ayam*
	Add(1,5449,1,50000,0,521,200,1019,300,7711,20);
	Add(1,5054,1,50000,0,2252,1,1054,450,943,1200,7711,20);
	//Add(2,5277,1,50000,0,5278,1,508,200); //yelllow bandana
	Add(1,2237,1,50000,0,1020,100,983,1,2241,1,7711,20);
	Add(1,5172,1,50000,0,968,1,979,3,2227,1,1059,20,7711,20); // Added Beret*
	Add(1,5229,1,0,0,1038,600,7048,4,982,1,983,1,7711,20); // Brown Deviruchi Hat*
	//Add(1,5147,1,50000,0,2227,1,978,1,1057,100,7711,20);
	Add(1,5076,1,50000,0,2227,1,7218,50,7711,20);
	Add(1,5236,1,50000,0,2227,1,7218,50,978,1,7711,20);
	Add(1,5235,1,50000,0,2227,1,7218,50,982,1,983,1,7711,20);
	Add(1,5237,1,50000,0,2227,1,7218,50,975,1,982,1,7711,20);
	Add(1,5057,1,50000,0,2213,1,983,1,914,200,7711,20);
	Add(1,5065,1,50000,0,624,1,959,300,544,50,1023,1,7711,20);
	Add(1,5052,1,50000,0,2211,1,978,1,7003,300,7711,20);
	Add(1,2296,1,50000,0,2243,1,999,100,7711,20);
	Add(1,5129,1,50000,0,604,1,916,1,7711,20);
	//Add(1,5102,1,50000,0,7263,2,2276,1,2239,1,568,150,7711,20);
	Add(1,5040,1,50000,0,7047,100,7711,20);
	//Add(2,5109,1,50000,0,10015,1,10007,1,5023,1,975,1,7711,20); //Red Bonnet
	//Add(1,5382,1,50000,0,671,3,10016,2,5083,1,7711,20);
	Add(1,5016,1,50000,0,1030,10);
	Add(1,5169,1,50000,0,706,1,1019,500,7200,10,1049,20,7165,500,1054,2,1024,100,7711,20);
	Add(1,5034,1,50000,0,2233,1,746,20,7711,20);
	Add(1,2214,1,50000,0,949,100,706,1,722,1,2213,1,7711,20);
	Add(1,5233,1,50000,0,2233,1,983,1,7206,300,7030,1,978,1,7711,20);
	Add(1,5231,1,50000,0,2233,1,983,1,7206,300,7030,1,982,1,983,1,7711,20);
	Add(1,5416,1,50000,0,746,20,523,12,970,50,7134,1,7711,20); // Beer Hat*
	Add(1,5410,1,0,0,7188,40,7111,20,7711,20);
	Add(1,5241,1,0,0,2252,1,1036,400,7001,50,4052,1,978,1,7711,20);
	Add(1,5240,1,0,0,2252,1,1036,400,7001,50,4052,1,982,1,983,1,7711,20);
	Add(1,5175,1,50000,0,7111,100,938,99,983,1,7711,20);
	Add(1,5080,1,50000,0,10006,1,714,1,671,1,7711,20);
	Add(1,5024,1,50000,0,529,10,530,5,539,20,999,10,538,15,7711,20);
	Add(1,5028,1,50000,0,2279,1,7035,10,526,100,7711,20); // Candle*
	Add(1,5200,1,50000,0,5016,1,981,1,7317,20,7711,20);
	//Add(1,5359,1,50000,0,2284,1,5019,1,975,1,7711,20); //Ship Captain Hat
	Add(1,5026,1,50000,0,1036,450,949,330,539,120,982,1,7711,20);
	//Add(1,5142,1,50000,0,5017,1,2229,1,5014,1,7209,100,1035,100,1036,100,1037,100,979,1,7711,20); // Crescent Helm*
	//Add(1,5283,1,50000,0,949,200,916,100,7063,20,925,1,7711,20);
	Add(1,5260,1,50000,0,4293,1,538,100,530,100,529,50,7711,20);
	Add(1,5075,1,50000,0,2248,1,7030,108,7194,108,7120,4,7711,20);
	Add(1,5048,1,50000,0,5041,1,999,10,7711,20);
	Add(1,5036,1,50000,0,2608,1,7069,500,7711,20);
	Add(1,5140,1,50000,0,5085,1,2244,1,5191,1,7166,50,7711,20);
	//Add(1,5135,1,50000,0,2295,1,671,1,975,1,999,5,7711,20);//Cyclopes
	//Add(1,5181,1,50000,0,7511,100,7340,200,7023,10,7711,20);//Helm of Darkness
	//Add(1,5108,1,50000,0,7301,1887,5114,1,611,10,7711,20);//Renown Detective
	Add(1,5081,1,50000,0,2249,1,714,1,671,1,7711,20);
	
	Add(2,5038,1,50000,0,1038,600,7048,40,7711,20);
	//Add(2,5227,1,50000,0,1038,600,7048,40,975,1,7711,20); //Red Devi
	//Add(2,5228,1,50000,0,1038,600,7048,40,982,1,7711,20); // Gray Devi
	//Add(2,5186,1,50000,0,1032,100,7100,100,905,250,7711,20); //Geographer
	Add(2,5091,1,50000,0,10016,1,714,1,671,1,7711,20);
	Add(2,5082,1,50000,0,921,300,7711,20);
	Add(2,2273,1,50000,0,2275,1,998,50,733,1,7711,20);
	//Add(2,5258,1,50000,0,914,100,975,1,976,1,978,1,7711,20); //Costume Afro
	Add(2,5058,1,50000,0,2233,1,983,1,7206,300,7030,1,7711,20);
	Add(2,5252,1,50000,0,5058,1,1022,250,7267,100,7711,20);
	//Add(2,5198,1,50000,0,5058,1,2214,1,949,500,914,200,622,50,1974,1,7711,20);
	//Add(2,5232,1,50000,0,2233,1,983,1,7206,300,7030,1,982,1,975,1,7711,20); //PinK Drooping
	//Add(2,5230,1,50000,0,2233,1,983,1,7206,300,7030,1,982,1,7711,20);// Gray Drooping
	//Add(2,5234,1,50000,0,2233,1,983,1,7206,300,7030,1,976,1,7711,20); // Yellow Drooping
	//Add(2,5253,1,50000,0,1034,300,7445,30,5141,10,979,1,7711,20); // Lif Doll Hat
	Add(5,2283,1,50000,0,724,1,5001,1,949,200,7711,20);
	//Add(5,5243,1,50000,0,975,1,976,1,914,100,7441,150,7065,25,2283,1,7711,20); //Shafka
	//Add(5,5259,1,50000,0,978,1,7561,100,949,500,1026,200,7711,20); //Costume Elephant
	//Add(2,5205,1,50000,0,5185,1,610,100,706,25,7194,113,7711,20);
	Add(2,5068,1,50000,0,2255,1,2286,1,7711,20);
	//Add(2,5304,1,50000,0,7017,2,2510,1,983,1,7711,20); //Cap of Blind
	//Add(2,5207,1,50000,0,2282,5,2254,2,671,1,7063,15,7711,20); //Costume Angel
	//Add(2,5333,1,50000,0,996,4,12028,1,12032,1,992,10,5011,1,7711,20);//RAdio Anthena
	//Add(2,5312,1,50000,0,2261,1,983,1,2280,1,2627,1,671,1,7711,20);//Ayothaya
	//Add(2,5379,1,50000,0,5061,2,978,1,2270,2,5083,1,1059,150,7711,20); //Tam
	//Add(2,5401,1,50000,0,5288,1,983,1,7711,20);// Black Frame Glasses
	//Add(2,5146,1,50000,0,978,1,949,500,1019,1,7711,20);
	Add(2,5282,1,50000,0,5200,1,982,1,978,2,7711,20);
	//Add(2,5247,1,50000,0,1039,60,923,25,2255,1,7711,20); //Satan helm
	Add(2,5364,1,50000,0,5347,1,975,1,982,1,983,1,5048,1,7711,20);
	//Add(2,5210,1,50000,0,2254,10,7063,50,7168,200,949,200,7711,20); // Flapping Angel Wing*
	Add(2,5047,1,50000,0,2271,1,975,1,7711,20);
	Add(2,5170,1,50000,0,5172,1,949,300,982,1,7711,20); // Feather Beret*
	//Add(2,5380,1,50000,0,5065,2,7711,20); //Costume Fish
	Add(2,5303,1,50000,0,712,100,710,5,629,5,10009,1,7711,20);
	//Add(2,5302,1,50000,0,7553,2,982,1,7771,1,7711,20); //Water Lily Hat
	Add(2,5056,1,50000,0,5079,1,578,100,7711,20);
	Add(2,5061,1,50000,0,2269,1,999,10,7711,20);
	Add(2,5405,1,50000,0,1034,45,949,80,916,100,7711,20); // Filir Hat*
	//Add(2,5421,1,50000,0,2286,1,7122,60,7711,20);
	Add(2,5424,1,50000,0,980,1,620,1,605,50,985,200,7711,20);
	Add(2,5425,1,50000,0,981,1,533,1,605,50,985,200,7711,20);
	Add(2,5018,1,50000,0,2247,1,916,300,7711,20);
	Add(2,5403,1,50000,0,1023,1,544,5,579,1,7711,20);
	Add(2,5276,1,50000,0,2261,1,914,200,983,1,976,1,975,1,7711,20);
	
	
	Add(3,5144,1,50000,0,2214,1,2221,1,2252,5,1001,200,7711,20); // Gambler Hat*
	Add(3,5063,1,50000,0,970,1,930,200,7711,20);
	Add(3,5193,1,50000,0,2208,1,979,1,7711,20);
	Add(3,5021,1,50000,0,2233,1,671,1,999,20,949,80,938,400,7711,20);
	Add(3,5179,1,50000,0,2234,1,671,1,2610,4,1524,2,7711,20); // Golden Tiara*
	Add(3,2240,1,50000,0,1040,2,982,2,949,4,7457,1,7711,20);
	//Add(3,5336,1,0,0,2272,1,7112,25,714,1,7711,20); // Guildsman Recruiter Hat*
	//Add(3,5176,1,50000,0,706,1,1019,500,7200,10,7015,20,2267,1,952,100,1028,100,7711,20);
	Add(3,5001,1,50000,0,999,40,984,1,970,1,1003,1,7711,20);
	Add(3,5041,1,50000,0,7013,1200,7711,20); // Heart Of Hairpin*
	Add(3,5025,1,50000,0,2229,1,2254,1,7036,5,7711,20);
	//Add(3,5139,1,50000,0,5085,1,710,5,2269,1,975,1,7711,20); // Hibiscus*
	Add(3,5070,1,50000,0,7216,300,7097,300,2211,1,982,1,7711,20);
	Add(3,5273,1,50000,0,5147,1,914,200,982,1,975,1,979,1,7711,20);
	Add(3,5071,1,50000,0,5010,1,5049,1,7101,10,7711,20);
	//Add(3,5173,50000,0,0,7445,7,7446,7,7447,7,7478,7,945,300,983,1,733,5,2221,1,7711,20); //Magistre Hat
	Add(3,5321,1,50000,0,2275,2,2211,2,7215,4,7217,20,7711,20); // Ifrit
	Add(3,5448,1,0,0,521,200,1019,300,7711,20);
	
	//Add(4,5396,1,50000,0,5430,1,5285,1,7262,20,2233,1,7711,20);// Jasper Crest
	Add(4,5371,1,50000,0,5016,1,1004,35,7711,20);
	//Add(4,5156,1,50000,0,2265,10,982,1,7711,20);
	Add(4,5154,1,50000,0,2201,5,7020,5,7711,20); // Father's Sunglasses*
	Add(4,5155,1,50000,0,7023,20,7211,10,7300,10,7020,10,7113,10,7114,10,1047,10,7711,20); // Father's White Moustache*
	Add(4,5426,1,50000,0,5027,1,976,5,7711,20);
	Add(4,5069,1,50000,0,1022,99,7711,20);
	//Add(4,5143,1,50000,0,5090,1,1020,300,975,1,982,1,7711,20);
	Add(4,5020,1,50000,0,2215,1,2210,1,949,200,7711,20); // Kafra Band*
	//Add(4,5291,1,50000,0,7323,100,671,5,7711,20); //Costume Magic kettle
	//Add(4,5372,1,50000,0,5099,1,5230,1,2747,5,982,15,7711,20); Koneko Donation
	//Add(4,5311,1,50000,0,5139,5,7711,20); //Large Hibiscus
	Add(4,5422,1,50000,0,1550,3,1006,20,7711,20);
	Add(4,5078,1,50000,0,5033,1,5064,1,7711,20);
	Add(4,5418,1,50000,0,5016,1,2261,1,968,1,975,5,1004,35,7711,20);
	Add(4,5238,1,50000,0,2252,1,1036,400,7001,50,4052,1,975,1,7711,20);
	//Add(4,5322,1,50000,0,10019,1,982,2,7711,20);
	//Add(4,5332,1,50000,0,7019,10,7200,10,7711,20);
	Add(4,5392,1,50000,0,721,5,7216,25,7711,20);
	Add(4,5803,1,50000,0,2215,3,2210,2,5061,1,2269,5,7711,20); // Love Flower Hat*
	//Add(4,5393,1,50000,0,2285,5,994,10,7097,25,7711,20); //Valintine Hat
	//Add(4,5365,1,50000,0,574,150,7031,150,7711,20); //Costume Magnolia
	Add(4,5185,1,50000,0,5061,1,712,100,7194,150,5064,1,520,50,521,50,7711,20); // Laurel Wreath*
	Add(4,5130,1,50000,0,1048,100,930,150,517,30,7711,20); // Lion Mask*
	Add(4,5084,1,50000,0,1026,1000,7065,100,945,100,7030,1,7711,20);
	Add(4,5177,1,50000,0,706,1,1019,500,7200,10,1049,500,1053,2,980,1,7711,20);
	Add(4,5027,1,50000,0,2252,1,1036,400,7001,50,4052,1,7711,20);
	Add(4,5275,1,50000,0,5147,1,914,200,975,1,976,1,981,1,7711,20); // Marvelous Wig*
	//Add(4,5187,1,50000,0,5085,1,5091,1,5117,2,978,1,975,1,7711,20); twin red Ribbon
	Add(4,5138,1,50000,0,2227,1,5027,1,2276,5,981,1,7711,20); // Magic Eyes*
	//Add(4,5099,1,50000,0,7267,300,7171,300,1029,5,7711,20);
	Add(4,5031,1,50000,0,5009,1,5028,1,746,10,999,25,7711,20); // Mine Hat*
	Add(4,5073,1,50000,0,2285,1,1550,1,7711,20);
	Add(4,5117,1,50000,0,731,10,748,2,982,1,7711,20);
	//Add(4,5151,1,50000,0,5001,1,978,1,991,200,7711,20); //Noted headphone
	Add(4,2281,1,50000,0,998,20,707,1,7711,20);
	Add(4,5043,1,50000,0,2281,1,1048,50,7711,20);
	Add(4,5094,1,50000,0,968,100,2299,1,1124,1,931,1000,7711,20);
	Add(4,5196,1,50000,0,2208,1,980,1,7711,20);
	Add(4,5004,1,50000,0,701,5,7711,20);
	Add(4,5197,1,0,0,2208,1,982,1,7711,20);
	//Add(4,5278,1,0,0,2210,1,5192,1,2250,1,7711,20); //Yellow Ribbon
	Add(4,5192,1,0,0,2208,1,976,1,7711,20);
	Add(4,5121,1,0,0,641,10,660,1,7099,30,7315,10,7711,20); // Zealotus Mask*


// -----------------------------------------------------------

	freeloop(0);
	set .menu$,"";
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1) {
		set .menu$, .menu$+.Shops$[.@i]+":";
		npcshopdelitem "pshop"+.@i,909;
	}
	end;

OnMenu:
	set .@size, getarraysize(@i);
	if (!.@size) set .@i, select(.menu$);
	else if (.@size == 1) set .@i, @i[0];
	else {
		for(set .@j,0; .@j<.@size; set .@j,.@j+1)
			set .@menu$, .@menu$+.Shops$[@i[.@j]]+":";
		set .@i, @i[select(.@menu$)-1];
	}
	deletearray @i[0],getarraysize(@i);
	if (.Shops$[.@i] == "") {
		message strcharinfo(0),"An error has occurred.";
		end;
	}
	dispbottom "Select one item at a time.";
	callshop "pshop"+.@i,1;
	npcshopattach "pshop"+.@i;
	end;

OnBuyItem:
	// .@q[] : RewardID, BoughtAmt, RewardAmt, BaseAmt, ReqZeny, ReqPts, { ReqItem, ReqAmt, ... }
	setarray .@q[0],@bought_nameid[0],((@bought_quantity[0] > .MaxStack)?.MaxStack:@bought_quantity[0]);
	copyarray .@q[3],getd(".q_"+.@q[0]+"[0]"),getarraysize(getd(".q_"+.@q[0]));
	set .@q[2],.@q[1]*.@q[3];
	if (!.@q[2] || .@q[2] > 30000) {
		message strcharinfo(0),"You can't purchase that many "+getitemname(.@q[0])+".";
		end;
	}
	mes "[Quest Shop]";
	mes "Reward: ^0055FF"+((.@q[2] > 1)?.@q[2]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requirements:";
	disable_items;
	if (.@q[4]) mes " > "+Chk(Zeny,.@q[4]*.@q[1])+(.@q[4]*.@q[1])+" Zeny^000000";
	if (.@q[5]) mes " > "+Chk(getd(.Points$[0]),.@q[5]*.@q[1])+(.@q[5]*.@q[1])+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+(.@q[5]*.@q[1])+")^000000";
	if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " > "+Chk(countitem(.@q[.@i]),.@q[.@i+1]*.@q[1])+((.ShowID)?"{"+.@q[.@i]+"} ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+(.@q[.@i+1]*.@q[1])+")^000000";
	next;
	setarray @qe[1], getiteminfo(.@q[0],5), getiteminfo(.@q[0],11);
	if (@qe[2] > 0 && ((@qe[1] & 1) || (@qe[1] & 256) || (@qe[1] & 512) || (@qe[1] & 1024) || (@qe[1] & 2048) || (@qe[1] & 4096) || (@qe[1] & 4) || (@qe[1] & 8192)))
		set .@preview,1;
	addtimer 1000, strnpcinfo(0)+"::OnEnd";
	while(1) {
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000:"+((.@preview && !@qe[7])?" ~ Preview...":"")+": ~ ^777777Cancel^000000")) {
		case 1:
			if (@qe[0]) { 
				mes "[Quest Shop]";
				mes "You're missing one or more quest requirements.";
				close;
			}
			if (!checkweight(.@q[0],.@q[2])) {
				mes "[Quest Shop]";
				mes "^FF0000You need "+(((.@q[2]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" additional weight capacity to complete this trade.^000000";
				close;
			}
			if (.@q[4]) set Zeny, Zeny-(.@q[4]*.@q[1]);
			if (.@q[5]) setd .Points$[0], getd(.Points$[0])-(.@q[5]*.@q[1]);
			if (.@q[6]) for(set .@i,6; .@i<getarraysize(.@q); set .@i,.@i+2)
				delitem .@q[.@i],.@q[.@i+1]*.@q[1];
			getitem .@q[0],.@q[2];
			if (.Announce) announce strcharinfo(0)+" has created "+((.@q[2] > 1)?.@q[2]+"x "+getitemname(.@q[0]):callfunc("F_InsertArticle",getitemname(.@q[0])))+"!",0;
			specialeffect2 EF_FLOWERLEAF;
			close;
		case 2:
			setarray @qe[3], getlook(LOOK_HEAD_BOTTOM), getlook(LOOK_HEAD_TOP), getlook(LOOK_HEAD_MID), getlook(LOOK_ROBE), 1;
			if ((@qe[1] & 1) || (@qe[1] & 4096)) changelook LOOK_HEAD_BOTTOM, @qe[2];
			else if ((@qe[1] & 256) || (@qe[1] & 1024)) changelook LOOK_HEAD_TOP, @qe[2];
			else if ((@qe[1] & 512) || (@qe[1] & 2048)) changelook LOOK_HEAD_MID, @qe[2];
			else if ((@qe[1] & 4) || (@qe[1] & 8192)) changelook LOOK_ROBE, @qe[2];
			break;
		case 3:
			close;
		}
	}

OnEnd:
	if (@qe[7]) {
		changelook LOOK_HEAD_BOTTOM, @qe[3];
		changelook LOOK_HEAD_TOP, @qe[4];
		changelook LOOK_HEAD_MID, @qe[5];
		changelook LOOK_ROBE, @qe[6];
	}
	deletearray @qe[0],8;
	end;

function Add {
	if (getitemname(getarg(1)) == "null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped).";
		return;
	}
	setarray .@j[0],getarg(2),getarg(3),getarg(4);
	for(set .@i,5; .@i<getargcount(); set .@i,.@i+2) {
		if (getitemname(getarg(.@i)) == "null") {
			debugmes "Quest requirement #"+getarg(.@i)+" invalid (skipped).";
			return;
		} else
			setarray .@j[.@i-2],getarg(.@i),getarg(.@i+1);
	}
	copyarray getd(".q_"+getarg(1)+"[0]"),.@j[0],getarraysize(.@j);
	npcshopadditem "pshop"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return;
}

function Chk {
	if (getarg(0) < getarg(1)) {
		set @qe[0],1;
		return "^FF0000";
	} else
		return "^00FF00";
}

function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot) {
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),2) == 4 || getiteminfo(getarg(0),2) == 5) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$;
	}
}
}

function	script	pshop	{
	deletearray @i[0],getarraysize(@i);
	for(set .@i,0; .@i<getargcount(); set .@i,.@i+1)
		set @i[.@i],getarg(.@i);
	doevent "1quest_cshop::OnMenu";
	end;
}


// Dummy shop data -- copy as needed.
//============================================================
-	shop	pshop1	-1,909:-1
-	shop	pshop2	-1,909:-1
-	shop	pshop3	-1,909:-1
-	shop	pshop4	-1,909:-1